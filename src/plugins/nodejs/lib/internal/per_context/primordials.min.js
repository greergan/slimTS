"use strict";const{defineProperty:ReflectDefineProperty,getOwnPropertyDescriptor:ReflectGetOwnPropertyDescriptor,ownKeys:ReflectOwnKeys}=Reflect,{apply:apply,bind:bind,call:call}=Function.prototype,uncurryThis=bind.bind(call);primordials.uncurryThis=uncurryThis;const applyBind=bind.bind(apply);primordials.applyBind=applyBind;const varargsMethods=["ArrayOf","ArrayPrototypePush","ArrayPrototypeUnshift","MathHypot","MathMax","MathMin","StringFromCharCode","StringFromCodePoint","StringPrototypeConcat","TypedArrayOf"];function getNewKey(e){return"symbol"==typeof e?`Symbol${e.description[7].toUpperCase()}${e.description.slice(8)}`:`${e[0].toUpperCase()}${e.slice(1)}`}function copyAccessor(e,t,r,{enumerable:o,get:l,set:a}){ReflectDefineProperty(e,`${t}Get${r}`,{__proto__:null,value:uncurryThis(l),enumerable:o}),void 0!==a&&ReflectDefineProperty(e,`${t}Set${r}`,{__proto__:null,value:uncurryThis(a),enumerable:o})}function copyPropsRenamed(e,t,r){for(const o of ReflectOwnKeys(e)){const l=getNewKey(o),a=ReflectGetOwnPropertyDescriptor(e,o);if("get"in a)copyAccessor(t,r,l,a);else{const o=`${r}${l}`;ReflectDefineProperty(t,o,{__proto__:null,...a}),varargsMethods.includes(o)&&ReflectDefineProperty(t,`${o}Apply`,{__proto__:null,value:applyBind(a.value,e)})}}}function copyPropsRenamedBound(e,t,r){for(const o of ReflectOwnKeys(e)){const l=getNewKey(o),a=ReflectGetOwnPropertyDescriptor(e,o);if("get"in a)copyAccessor(t,r,l,a);else{const{value:o}=a;"function"==typeof o&&(a.value=o.bind(e));const p=`${r}${l}`;ReflectDefineProperty(t,p,{__proto__:null,...a}),varargsMethods.includes(p)&&ReflectDefineProperty(t,`${p}Apply`,{__proto__:null,value:applyBind(o,e)})}}}function copyPrototype(e,t,r){for(const o of ReflectOwnKeys(e)){const l=getNewKey(o),a=ReflectGetOwnPropertyDescriptor(e,o);if("get"in a)copyAccessor(t,r,l,a);else{const{value:e}=a;"function"==typeof e&&(a.value=uncurryThis(e));const o=`${r}${l}`;ReflectDefineProperty(t,o,{__proto__:null,...a}),varargsMethods.includes(o)&&ReflectDefineProperty(t,`${o}Apply`,{__proto__:null,value:applyBind(e)})}}}["Proxy","globalThis"].forEach((e=>{primordials[e]=globalThis[e]})),[decodeURI,decodeURIComponent,encodeURI,encodeURIComponent].forEach((e=>{primordials[e.name]=e})),[escape,eval,unescape].forEach((e=>{primordials[e.name]=e})),["Atomics","JSON","Math","Proxy","Reflect"].forEach((e=>{copyPropsRenamed(globalThis[e],primordials,e)})),["AggregateError","Array","ArrayBuffer","BigInt","BigInt64Array","BigUint64Array","Boolean","DataView","Date","Error","EvalError","FinalizationRegistry","Float32Array","Float64Array","Function","Int16Array","Int32Array","Int8Array","Map","Number","Object","RangeError","ReferenceError","RegExp","Set","String","Symbol","SyntaxError","TypeError","URIError","Uint16Array","Uint32Array","Uint8Array","Uint8ClampedArray","WeakMap","WeakRef","WeakSet"].forEach((e=>{const t=globalThis[e];primordials[e]=t,copyPropsRenamed(t,primordials,e),copyPrototype(t.prototype,primordials,`${e}Prototype`)})),["Promise"].forEach((e=>{const t=globalThis[e];primordials[e]=t,copyPropsRenamedBound(t,primordials,e),copyPrototype(t.prototype,primordials,`${e}Prototype`)})),[{name:"TypedArray",original:Reflect.getPrototypeOf(Uint8Array)},{name:"ArrayIterator",original:{prototype:Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())}},{name:"StringIterator",original:{prototype:Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())}}].forEach((({name:e,original:t})=>{primordials[e]=t,copyPrototype(t,primordials,e),copyPrototype(t.prototype,primordials,`${e}Prototype`)})),primordials.IteratorPrototype=Reflect.getPrototypeOf(primordials.ArrayIteratorPrototype);const{Array:ArrayConstructor,ArrayPrototypeForEach:ArrayPrototypeForEach,ArrayPrototypeMap:ArrayPrototypeMap,FinalizationRegistry:FinalizationRegistry,FunctionPrototypeCall:FunctionPrototypeCall,Map:Map,ObjectDefineProperties:ObjectDefineProperties,ObjectDefineProperty:ObjectDefineProperty,ObjectFreeze:ObjectFreeze,ObjectSetPrototypeOf:ObjectSetPrototypeOf,Promise:Promise,PromisePrototypeThen:PromisePrototypeThen,PromiseResolve:PromiseResolve,ReflectApply:ReflectApply,ReflectConstruct:ReflectConstruct,ReflectGet:ReflectGet,ReflectSet:ReflectSet,RegExp:RegExp,RegExpPrototype:RegExpPrototype,RegExpPrototypeExec:RegExpPrototypeExec,RegExpPrototypeGetDotAll:RegExpPrototypeGetDotAll,RegExpPrototypeGetFlags:RegExpPrototypeGetFlags,RegExpPrototypeGetGlobal:RegExpPrototypeGetGlobal,RegExpPrototypeGetHasIndices:RegExpPrototypeGetHasIndices,RegExpPrototypeGetIgnoreCase:RegExpPrototypeGetIgnoreCase,RegExpPrototypeGetMultiline:RegExpPrototypeGetMultiline,RegExpPrototypeGetSource:RegExpPrototypeGetSource,RegExpPrototypeGetSticky:RegExpPrototypeGetSticky,RegExpPrototypeGetUnicode:RegExpPrototypeGetUnicode,Set:Set,SymbolIterator:SymbolIterator,SymbolMatch:SymbolMatch,SymbolMatchAll:SymbolMatchAll,SymbolReplace:SymbolReplace,SymbolSearch:SymbolSearch,SymbolSpecies:SymbolSpecies,SymbolSplit:SymbolSplit,WeakMap:WeakMap,WeakRef:WeakRef,WeakSet:WeakSet}=primordials,createSafeIterator=(e,t)=>{class r{constructor(t){this._iterator=e(t)}next(){return t(this._iterator)}[SymbolIterator](){return this}}return ObjectSetPrototypeOf(r.prototype,null),ObjectFreeze(r.prototype),ObjectFreeze(r),r};primordials.SafeArrayIterator=createSafeIterator(primordials.ArrayPrototypeSymbolIterator,primordials.ArrayIteratorPrototypeNext),primordials.SafeStringIterator=createSafeIterator(primordials.StringPrototypeSymbolIterator,primordials.StringIteratorPrototypeNext);const copyProps=(e,t)=>{ArrayPrototypeForEach(ReflectOwnKeys(e),(r=>{ReflectGetOwnPropertyDescriptor(t,r)||ReflectDefineProperty(t,r,{__proto__:null,...ReflectGetOwnPropertyDescriptor(e,r)})}))},makeSafe=(e,t)=>{if(SymbolIterator in e.prototype){const r=new e;let o;ArrayPrototypeForEach(ReflectOwnKeys(e.prototype),(l=>{if(!ReflectGetOwnPropertyDescriptor(t.prototype,l)){const a=ReflectGetOwnPropertyDescriptor(e.prototype,l);if("function"==typeof a.value&&0===a.value.length&&SymbolIterator in(FunctionPrototypeCall(a.value,r)??{})){const e=uncurryThis(a.value);o??=uncurryThis(e(r).next);const t=createSafeIterator(e,o);a.value=function(){return new t(this)}}ReflectDefineProperty(t.prototype,l,{__proto__:null,...a})}}))}else copyProps(e.prototype,t.prototype);return copyProps(e,t),ObjectSetPrototypeOf(t.prototype,null),ObjectFreeze(t.prototype),ObjectFreeze(t),t};primordials.makeSafe=makeSafe,primordials.SafeMap=makeSafe(Map,class extends Map{constructor(e){super(e)}}),primordials.SafeWeakMap=makeSafe(WeakMap,class extends WeakMap{constructor(e){super(e)}}),primordials.SafeSet=makeSafe(Set,class extends Set{constructor(e){super(e)}}),primordials.SafeWeakSet=makeSafe(WeakSet,class extends WeakSet{constructor(e){super(e)}}),primordials.SafeFinalizationRegistry=makeSafe(FinalizationRegistry,class extends FinalizationRegistry{constructor(e){super(e)}}),primordials.SafeWeakRef=makeSafe(WeakRef,class extends WeakRef{constructor(e){super(e)}});const SafePromise=makeSafe(Promise,class extends Promise{constructor(e){super(e)}});primordials.SafePromisePrototypeFinally=(e,t)=>new Promise(((r,o)=>new SafePromise(((t,r)=>PromisePrototypeThen(e,t,r))).finally(t).then(r,o))),primordials.AsyncIteratorPrototype=primordials.ReflectGetPrototypeOf(primordials.ReflectGetPrototypeOf((async function*(){})).prototype);const arrayToSafePromiseIterable=(e,t)=>new primordials.SafeArrayIterator(ArrayPrototypeMap(e,((e,r)=>new SafePromise(((o,l)=>PromisePrototypeThen(null==t?e:t(e,r),o,l))))));primordials.SafePromiseAll=(e,t)=>new Promise(((r,o)=>SafePromise.all(arrayToSafePromiseIterable(e,t)).then(r,o))),primordials.SafePromiseAllReturnArrayLike=(e,t)=>new Promise(((r,o)=>{const{length:l}=e,a=ArrayConstructor(l);ObjectSetPrototypeOf(a,null),0===l&&r(a);let p=l;for(let i=0;i<l;i++){const l=null!=t?t(e[i],i):e[i];PromisePrototypeThen(PromiseResolve(l),(e=>{a[i]=e,0==--p&&r(a)}),o)}})),primordials.SafePromiseAllReturnVoid=(e,t)=>new Promise(((r,o)=>{let l=e.length;0===l&&r();const a=()=>{0==--l&&r()};for(let r=0;r<e.length;r++){const l=null!=t?t(e[r],r):e[r];PromisePrototypeThen(PromiseResolve(l),a,o)}})),primordials.SafePromiseAllSettled=(e,t)=>new Promise(((r,o)=>SafePromise.allSettled(arrayToSafePromiseIterable(e,t)).then(r,o))),primordials.SafePromiseAllSettledReturnVoid=(e,t)=>new Promise((r=>{let o=e.length;0===o&&r();const l=()=>{0==--o&&r()};for(let r=0;r<e.length;r++){const o=null!=t?t(e[r],r):e[r];PromisePrototypeThen(PromiseResolve(o),l,l)}})),primordials.SafePromiseAny=(e,t)=>new Promise(((r,o)=>SafePromise.any(arrayToSafePromiseIterable(e,t)).then(r,o))),primordials.SafePromiseRace=(e,t)=>new Promise(((r,o)=>SafePromise.race(arrayToSafePromiseIterable(e,t)).then(r,o)));const{exec:OriginalRegExpPrototypeExec,[SymbolMatch]:OriginalRegExpPrototypeSymbolMatch,[SymbolMatchAll]:OriginalRegExpPrototypeSymbolMatchAll,[SymbolReplace]:OriginalRegExpPrototypeSymbolReplace,[SymbolSearch]:OriginalRegExpPrototypeSymbolSearch,[SymbolSplit]:OriginalRegExpPrototypeSymbolSplit}=RegExpPrototype;class RegExpLikeForStringSplitting{#e;constructor(){this.#e=ReflectConstruct(RegExp,arguments)}get lastIndex(){return ReflectGet(this.#e,"lastIndex")}set lastIndex(e){ReflectSet(this.#e,"lastIndex",e)}exec(){return ReflectApply(OriginalRegExpPrototypeExec,this.#e,arguments)}}ObjectSetPrototypeOf(RegExpLikeForStringSplitting.prototype,null),primordials.hardenRegExp=function(e){return ObjectDefineProperties(e,{[SymbolMatch]:{__proto__:null,configurable:!0,value:OriginalRegExpPrototypeSymbolMatch},[SymbolMatchAll]:{__proto__:null,configurable:!0,value:OriginalRegExpPrototypeSymbolMatchAll},[SymbolReplace]:{__proto__:null,configurable:!0,value:OriginalRegExpPrototypeSymbolReplace},[SymbolSearch]:{__proto__:null,configurable:!0,value:OriginalRegExpPrototypeSymbolSearch},[SymbolSplit]:{__proto__:null,configurable:!0,value:OriginalRegExpPrototypeSymbolSplit},constructor:{__proto__:null,configurable:!0,value:{[SymbolSpecies]:RegExpLikeForStringSplitting}},dotAll:{__proto__:null,configurable:!0,value:RegExpPrototypeGetDotAll(e)},exec:{__proto__:null,configurable:!0,value:OriginalRegExpPrototypeExec},global:{__proto__:null,configurable:!0,value:RegExpPrototypeGetGlobal(e)},hasIndices:{__proto__:null,configurable:!0,value:RegExpPrototypeGetHasIndices(e)},ignoreCase:{__proto__:null,configurable:!0,value:RegExpPrototypeGetIgnoreCase(e)},multiline:{__proto__:null,configurable:!0,value:RegExpPrototypeGetMultiline(e)},source:{__proto__:null,configurable:!0,value:RegExpPrototypeGetSource(e)},sticky:{__proto__:null,configurable:!0,value:RegExpPrototypeGetSticky(e)},unicode:{__proto__:null,configurable:!0,value:RegExpPrototypeGetUnicode(e)}}),ObjectDefineProperty(e,"flags",{__proto__:null,configurable:!0,value:RegExpPrototypeGetFlags(e)}),e},primordials.SafeStringPrototypeSearch=(e,t)=>{t.lastIndex=0;const r=RegExpPrototypeExec(t,e);return r?r.index:-1},ObjectSetPrototypeOf(primordials,null),ObjectFreeze(primordials);