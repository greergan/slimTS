#!/usr/bin/env bash
PRODUCT_DIR=$HOME/product
KAFKA_HOME=$PRODUCT_DIR/kafka_2.13-3.6.1
PROMETHEUS_HOME=$PRODUCT_DIR/prometheus-2.48.1.linux-amd64
NODE_EXPORTER_HOME=$PRODUCT_DIR/node_exporter-1.7.0.linux-amd64
PROBLEM_STARTING="...problem starting"
start_node_exporter() {
	PID=`pgrep node_exporter`
	if [[ $PID != "" && $PID -gt 0 ]]; then
		echo "node_exporter already started on $PID"
	else
		echo -n "starting node_exporter"
		if [ "$NODE_EXPORTER_HOST" = "" ]; then
			NODE_EXPORTER_HOST=127.0.0.1:9100
		fi
		$NODE_EXPORTER_HOME/node_exporter --log.level=warn --web.listen-address=$NODE_EXPORTER_HOST &
		PID=`pgrep node_exporter`
		if [[ $PID != "" && $PID -gt 0 ]]; then
			echo "...on pid $PID"
		else
			echo $PROBLEM_STARTING
		fi
	fi
}
stop_node_exporter() {
	echo "stopping node_exporter"
	pkill node_exporter
}
start_prometheus() {
	PID=`pgrep prometheus`
	if [[ $PID != "" && $PID -gt 0 ]]; then
		echo "prometheus is already started on $PID"
	else
		echo -n "starting prometheus"
		$PROMETHEUS_HOME/prometheus --log.level=warn \
			--config.file=$PROMETHEUS_HOME/prometheus.yml --storage.tsdb.path=/tmp&
		PID=`pgrep prometheus`
		if [[ $PID != "" && $PID -gt 0 ]]; then
			echo "...on pid $PID"
		else
			echo $PROBLEM_STARTING
		fi
	fi
}
stop_prometheus() {
	echo "stopping prometheus"
	pkill prometheus
}
start_zookeeper() {
	PIDS=$(ps ax | grep java | grep -i QuorumPeerMain | grep -v grep | awk '{print $1}')
	if [[ "$PIDS" != "" && $PIDS -gt 0 ]]; then
		echo "zookeeper already started on pid $PIDS"
	else
		echo -n "starting zookeeper"
		$KAFKA_HOME/bin/zookeeper-server-start.sh -daemon $KAFKA_HOME/config/zookeeper.properties
		PIDS=$(ps ax | grep java | grep -i QuorumPeerMain | grep -v grep | awk '{print $1}')
		if [[ "$PIDS" != "" && $PIDS -gt 0 ]]; then
			echo "...on pid $PIDS"
		else
			echo $PROBLEM_STARTING
		fi
	fi
}
stop_zookeeper() {
	echo "stopping zookeeper"
	$KAFKA_HOME/bin/zookeeper-server-stop.sh
}
start_kafka() {
	PIDS=$(ps ax | grep ' kafka\.Kafka ' | grep java | grep -v grep | awk '{print $1}')
	if [[ "$PIDS" != "" && $PIDS -gt 0 ]]; then
		echo "kafka already started on pid $PIDS"
	else
		echo -n "starting kafka"
		$KAFKA_HOME/bin/kafka-server-start.sh -daemon $KAFKA_HOME/config/server.properties
		PIDS=$(ps ax | grep ' kafka\.Kafka ' | grep java | grep -v grep | awk '{print $1}')
		if [[ "$PIDS" != "" && $PIDS -gt 0 ]]; then
			echo "...on pid $PIDS"
		else
			echo $PROBLEM_STARTING
		fi
	fi
}
stop_kafka() {
	echo stopping kafka
	$KAFKA_HOME/bin/kafka-server-stop.sh
}
start_servers() {
	start_node_exporter
	start_prometheus
	start_zookeeper
	sleep 2
	start_kafka
	sleep 2
	status
}
stop_servers() {
	stop_prometheus
	stop_node_exporter
	stop_kafka
	stop_zookeeper
}
status() {
	NODE_EXPORTER_PID=`pgrep node_exporter`
	PROMETHEUS_PID=`pgrep prometheus`
	KAFKA_PIDS=$(ps ax | grep ' kafka\.Kafka ' | grep java | grep -v grep | awk '{print $1}')
	ZOOKEEPER_PIDS=$(ps ax | grep java | grep -i QuorumPeerMain | grep -v grep | awk '{print $1}')
	if [ "$PROMETHEUS_PID" != "" ];then
		echo "prometheus is running on pid $PROMETHEUS_PID"
	else
		echo "prometheus is not running"
	fi
	if [ "$NODE_EXPORTER_PID" != "" ];then
		echo "node_exporter is running on pid $NODE_EXPORTER_PID"
	else
		echo "node_exporter is not running"
	fi
	if [ "$ZOOKEEPER_PIDS" != "" ];then
		echo "zookeeper is running on pid $ZOOKEEPER_PIDS"
	else
		echo "zookeeper is not running"
	fi
	if [ "$KAFKA_PIDS" != "" ];then
		echo "kafka is running on pid $KAFKA_PIDS"
	else
		echo "kafka is not running"
	fi
	exit
}
usage() {
	echo "servers start|stop|status all|node_exporter|prometheus|zookeeper|kafka"
	exit
}
if [ $1 = "status" ];then
	status
fi
if [[ $# -ne 2 || ! $1 =~ ^(restart|start|stop)$ || ! $2 =~ ^(all|node_exporter|prometheus|zookeeper|kafka)$ ]];then
	usage
fi
if [ $2 = "all" ];then
	if [ $1 = "start" ];then
		start_servers
	elif [ $1 = "stop" ];then
		stop_servers
	fi
fi
if [ $2 = "prometheus" ];then
	if [ $1 = "restart" ];then
		stop_prometheus
		start_prometheus
	elif [ $1 = "start" ];then
		start_prometheus
	elif [ $1 = "stop" ];then
		stop_prometheus
	fi
fi
if [ $2 = "node_exporter" ];then
	if [ $1 = "start" ];then
		start_node_exporter
	elif [ $1 = "stop" ];then
		stop_node_exporter
	fi
fi
if [ $2 = "kafka" ];then
	if [ $1 = "start" ];then
		start_kafka
	elif [ $1 = "stop" ];then
		stop_kafka
	fi
fi
if [ $2 = "zookeeper" ];then
	if [ $1 = "start" ];then
		start_zookeeper
	elif [ $1 = "stop" ];then
		stop_zookeeper
	fi
fi
